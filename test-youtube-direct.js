import fetch from 'node-fetch';
import dotenv from 'dotenv';

// Load environment variables
dotenv.config({ path: '.env.local' });

async function testYouTubeAPI() {
  console.log('üîç Testando API do YouTube...\n');
  
  const apiKey = process.env.YOUTUBE_API_KEY;
  console.log('API Key encontrada:', apiKey ? `${apiKey.substring(0, 10)}...` : 'N√ÉO ENCONTRADA');
  
  if (!apiKey) {
    console.error('‚ùå YOUTUBE_API_KEY n√£o encontrada no .env.local');
    return;
  }
  
  // Teste 1: Buscar v√≠deos recentes do canal
  try {
    console.log('\nüìπ Buscando v√≠deos do canal...');
    const channelResponse = await fetch(
      `https://www.googleapis.com/youtube/v3/search?` +
      `key=${apiKey}&` +
      `channelId=UCuaFvcY4MKadobkPt9_BxbA&` + // Canal do Moodle (exemplo)
      `part=snippet&` +
      `order=date&` +
      `maxResults=5&` +
      `type=video`
    );
    
    if (!channelResponse.ok) {
      const errorText = await channelResponse.text();
      console.error('‚ùå Erro na busca de v√≠deos:', channelResponse.status, errorText);
    } else {
      const channelData = await channelResponse.json();
      console.log('‚úÖ V√≠deos encontrados:', channelData.items?.length || 0);
      
      if (channelData.items && channelData.items.length > 0) {
        console.log('üìù √öltimos v√≠deos:');
        channelData.items.forEach((video, index) => {
          console.log(`  ${index + 1}. ${video.snippet.title}`);
          console.log(`     Data: ${new Date(video.snippet.publishedAt).toLocaleDateString('pt-BR')}`);
        });
      }
    }
  } catch (error) {
    console.error('‚ùå Erro ao buscar v√≠deos:', error.message);
  }
  
  // Teste 2: Buscar por termo espec√≠fico
  try {
    console.log('\nüîé Buscando por "moodle tutorial"...');
    const searchResponse = await fetch(
      `https://www.googleapis.com/youtube/v3/search?` +
      `key=${apiKey}&` +
      `q=moodle tutorial&` +
      `part=snippet&` +
      `order=relevance&` +
      `maxResults=3&` +
      `type=video&` +
      `publishedAfter=2024-01-01T00:00:00Z` // V√≠deos de 2024 em diante
    );
    
    if (!searchResponse.ok) {
      const errorText = await searchResponse.text();
      console.error('‚ùå Erro na busca por termo:', searchResponse.status, errorText);
    } else {
      const searchData = await searchResponse.json();
      console.log('‚úÖ Resultados encontrados:', searchData.items?.length || 0);
      
      if (searchData.items && searchData.items.length > 0) {
        console.log('üìù V√≠deos de "moodle tutorial":');
        searchData.items.forEach((video, index) => {
          console.log(`  ${index + 1}. ${video.snippet.title}`);
          console.log(`     Canal: ${video.snippet.channelTitle}`);
          console.log(`     Data: ${new Date(video.snippet.publishedAt).toLocaleDateString('pt-BR')}`);
        });
      }
    }
  } catch (error) {
    console.error('‚ùå Erro na busca por termo:', error.message);
  }
  
  // Teste 3: Verificar quota restante (aproximado)
  try {
    console.log('\nüìä Testando quota da API...');
    const quotaTest = await fetch(
      `https://www.googleapis.com/youtube/v3/videos?` +
      `key=${apiKey}&` +
      `part=snippet&` +
      `id=dQw4w9WgXcQ` // Rick Roll como teste padr√£o
    );
    
    if (quotaTest.ok) {
      console.log('‚úÖ API funcionando - quota dispon√≠vel');
    } else {
      const errorText = await quotaTest.text();
      console.log('‚ö†Ô∏è Poss√≠vel problema de quota:', quotaTest.status, errorText);
    }
  } catch (error) {
    console.error('‚ùå Erro no teste de quota:', error.message);
  }
  
  console.log('\nüèÅ Teste conclu√≠do!');
}

testYouTubeAPI();
